package hu.bme.mit.incquery.cep.runtime.evaluation.queries

import "cep.meta"
import "sm.meta"
import "http://www.eclipse.org/emf/2002/Ecore"
uses hu.bme.mit.incquery.cep.runtime.evaluation.*

pattern finishedStateMachine(sm : StateMachine, et : EventToken) {
	StateMachine.states(sm, state);
	find finalState(state, et);
	EventToken.currentState(_, state);
}

pattern finalState(s : State, et : EventToken) {
	State.label(s, label);
	State.eventTokens(s, et);
	check(label.equalsIgnoreCase("final"));
}

pattern latestEvent(e) {
	InternalExecutionModel.latestEvent(_, e);
}

pattern transition(t) {
	Transition(t);
}

pattern preState(t, s) {
	Transition.preState(t, s);
}

pattern
guardAtomicPattern(guard : Guard, atomicPattern : AtomicEventPattern) {
	Guard.eventType(guard, atomicPattern);
}

pattern eventHandledByEventToken(e, et) {
	EventToken.eventCollection(et, e);
}

pattern atomicPatternType(a : AtomicEventPattern, t : EString) {
	AtomicEventPattern.type(a, t);
}

pattern enabledTransition(t : Transition, et : EventToken) {
	find latestEvent(e);
	Event.type(e, eventType);
	//check(eventType.equalsIgnoreCase("hu.bme.mit.incquery.cep.tests.testcaseSm.events.A"));
	Transition.guard.eventType.type(t, eventType);
	Transition.preState.eventTokens(t, et);
	neg find eventHandledByEventToken(e, et);
}