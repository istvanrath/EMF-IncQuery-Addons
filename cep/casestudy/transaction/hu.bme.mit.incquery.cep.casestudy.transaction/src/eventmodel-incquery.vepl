package hu.bme.mit.incquery.cep.casestudy.transaction

uses hu.bme.mit.incquery.cep.casestudy.transaction.sources.*
uses-patterns hu.bme.mit.incquery.cep.casestudy.transaction.incquery.patterns.sample.*
uses hu.bme.mit.incquery.cep.dsl.examples.actionhandlers.*
uses hu.bme.mit.incquery.cep.api.evm.*

IQPatternEvent componentA_Appeared(transactionId : String, customerId : String){
	iqPatternRef : componentA(_, transactionId, customerId)
	iqChangeType : NEW_MATCH_FOUND
}

IQPatternEvent componentB_Appeared(transactionId : String){
	iqPatternRef : componentB(_, transactionId)
	iqChangeType : NEW_MATCH_FOUND
}

IQPatternEvent componentC_Appeared(transactionId : String, supplierId : String){
	iqPatternRef : componentC(_, transactionId, supplierId)
	iqChangeType : NEW_MATCH_FOUND
}

ComplexEvent compoundTransactionEvent(tId:String, cId:String, sId:String){
	definition : (componentA_Appeared(tId, cId)
					-> componentB_Appeared(tId)
					-> componentC_Appeared(tId, sId)
				 )[5000]
}

Rule r1 {
	events: compoundTransactionEvent
	actionHandler: hu.bme.mit.incquery.cep.casestudy.transaction.actionhandlers.SimpleActionHandler
}