package hu.bme.mit.incquery.cep.tests.testcasesmqueries

import "cep.meta"
import "sm.meta"
import "http://www.eclipse.org/emf/2002/Ecore"
uses hu.bme.mit.incquery.cep.runtime.evaluation.*

pattern finishedStateMachine(sm) {
	find stateMachine(sm);
	find currentState(sm, cs);
	find stateLabel(cs, l);
	check((l as String).equalsIgnoreCase("final"));
}

pattern stateLabel(s, l){
	find state(s);
	State.label(s, l);
}

pattern currentState(sm, cs){
	find stateMachine(sm);
	find state(cs);
	StateMachine.currentState(sm, cs);
}

pattern postState(t) {
	find transition(t);
	find state(ps);
	Transition.postState(t, ps);
}

pattern stateMachine(sm) {
	StateMachine(sm);
}

pattern transition(t) {
	Transition(t);
}

pattern event(e) {
	Event(e);
}

pattern state(s) {
	State(s);
}

pattern outTransitionFromState(s, t) {
	find transition(t);
	find state(s);
	State.outTransitions(s, t);
}

pattern latestEvent(e) {
	InternalExecutionModel.latestEvent(_, e);
}

pattern enabledTransition(t) {
	find latestEvent(e);
	find transition(t);
	Event.id(e, eventId);
	Transition.guard.eventType(t, eventGuardType);
	check((eventGuardType.canonicalName as String).equalsIgnoreCase(eventId));
}

pattern CEvent(event : Event) {
	Event.id(event, eventId);
	check(eventId.equalsIgnoreCase("hu.bme.mit.incquery.cep.tests.testcaseSm.events.C"));
}