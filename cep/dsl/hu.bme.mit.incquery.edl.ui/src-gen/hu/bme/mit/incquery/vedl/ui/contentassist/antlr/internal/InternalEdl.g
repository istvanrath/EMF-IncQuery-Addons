/*
* generated by Xtext
*/
grammar InternalEdl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package hu.bme.mit.incquery.vedl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.mit.incquery.vedl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import hu.bme.mit.incquery.vedl.services.EdlGrammarAccess;

}

@parser::members {
 
 	private EdlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EdlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsage
entryRuleUsage 
:
{ before(grammarAccess.getUsageRule()); }
	 ruleUsage
{ after(grammarAccess.getUsageRule()); } 
	 EOF 
;

// Rule Usage
ruleUsage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsageAccess().getAlternatives()); }
(rule__Usage__Alternatives)
{ after(grammarAccess.getUsageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIQUsage
entryRuleIQUsage 
:
{ before(grammarAccess.getIQUsageRule()); }
	 ruleIQUsage
{ after(grammarAccess.getIQUsageRule()); } 
	 EOF 
;

// Rule IQUsage
ruleIQUsage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIQUsageAccess().getGroup()); }
(rule__IQUsage__Group__0)
{ after(grammarAccess.getIQUsageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventSourceUsage
entryRuleEventSourceUsage 
:
{ before(grammarAccess.getEventSourceUsageRule()); }
	 ruleEventSourceUsage
{ after(grammarAccess.getEventSourceUsageRule()); } 
	 EOF 
;

// Rule EventSourceUsage
ruleEventSourceUsage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventSourceUsageAccess().getGroup()); }
(rule__EventSourceUsage__Group__0)
{ after(grammarAccess.getEventSourceUsageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModel
entryRuleModel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Model
ruleModel
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getAlternatives()); }
(rule__Event__Alternatives)
{ after(grammarAccess.getEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractAtomicEvent
entryRuleAbstractAtomicEvent 
:
{ before(grammarAccess.getAbstractAtomicEventRule()); }
	 ruleAbstractAtomicEvent
{ after(grammarAccess.getAbstractAtomicEventRule()); } 
	 EOF 
;

// Rule AbstractAtomicEvent
ruleAbstractAtomicEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractAtomicEventAccess().getAlternatives()); }
(rule__AbstractAtomicEvent__Alternatives)
{ after(grammarAccess.getAbstractAtomicEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicEvent
entryRuleAtomicEvent 
:
{ before(grammarAccess.getAtomicEventRule()); }
	 ruleAtomicEvent
{ after(grammarAccess.getAtomicEventRule()); } 
	 EOF 
;

// Rule AtomicEvent
ruleAtomicEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicEventAccess().getGroup()); }
(rule__AtomicEvent__Group__0)
{ after(grammarAccess.getAtomicEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIQPatternEvent
entryRuleIQPatternEvent 
:
{ before(grammarAccess.getIQPatternEventRule()); }
	 ruleIQPatternEvent
{ after(grammarAccess.getIQPatternEventRule()); } 
	 EOF 
;

// Rule IQPatternEvent
ruleIQPatternEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIQPatternEventAccess().getGroup()); }
(rule__IQPatternEvent__Group__0)
{ after(grammarAccess.getIQPatternEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexEvent
entryRuleComplexEvent 
:
{ before(grammarAccess.getComplexEventRule()); }
	 ruleComplexEvent
{ after(grammarAccess.getComplexEventRule()); } 
	 EOF 
;

// Rule ComplexEvent
ruleComplexEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexEventAccess().getGroup()); }
(rule__ComplexEvent__Group__0)
{ after(grammarAccess.getComplexEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCEParamlist
entryRuleCEParamlist 
:
{ before(grammarAccess.getCEParamlistRule()); }
	 ruleCEParamlist
{ after(grammarAccess.getCEParamlistRule()); } 
	 EOF 
;

// Rule CEParamlist
ruleCEParamlist
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCEParamlistAccess().getGroup()); }
(rule__CEParamlist__Group__0)
{ after(grammarAccess.getCEParamlistAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamWithType
entryRuleParamWithType 
:
{ before(grammarAccess.getParamWithTypeRule()); }
	 ruleParamWithType
{ after(grammarAccess.getParamWithTypeRule()); } 
	 EOF 
;

// Rule ParamWithType
ruleParamWithType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamWithTypeAccess().getGroup()); }
(rule__ParamWithType__Group__0)
{ after(grammarAccess.getParamWithTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterFilter
entryRuleParameterFilter 
:
{ before(grammarAccess.getParameterFilterRule()); }
	 ruleParameterFilter
{ after(grammarAccess.getParameterFilterRule()); } 
	 EOF 
;

// Rule ParameterFilter
ruleParameterFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterFilterAccess().getGroup()); }
(rule__ParameterFilter__Group__0)
{ after(grammarAccess.getParameterFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIQPattern
entryRuleIQPattern 
:
{ before(grammarAccess.getIQPatternRule()); }
	 ruleIQPattern
{ after(grammarAccess.getIQPatternRule()); } 
	 EOF 
;

// Rule IQPattern
ruleIQPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIQPatternAccess().getNameAssignment()); }
(rule__IQPattern__NameAssignment)
{ after(grammarAccess.getIQPatternAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotations
entryRuleAnnotations 
:
{ before(grammarAccess.getAnnotationsRule()); }
	 ruleAnnotations
{ after(grammarAccess.getAnnotationsRule()); } 
	 EOF 
;

// Rule Annotations
ruleAnnotations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationsAccess().getAlternatives()); }
(rule__Annotations__Alternatives)
{ after(grammarAccess.getAnnotationsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContextAnnotation
entryRuleContextAnnotation 
:
{ before(grammarAccess.getContextAnnotationRule()); }
	 ruleContextAnnotation
{ after(grammarAccess.getContextAnnotationRule()); } 
	 EOF 
;

// Rule ContextAnnotation
ruleContextAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextAnnotationAccess().getGroup()); }
(rule__ContextAnnotation__Group__0)
{ after(grammarAccess.getContextAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSamplingAnnotation
entryRuleSamplingAnnotation 
:
{ before(grammarAccess.getSamplingAnnotationRule()); }
	 ruleSamplingAnnotation
{ after(grammarAccess.getSamplingAnnotationRule()); } 
	 EOF 
;

// Rule SamplingAnnotation
ruleSamplingAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSamplingAnnotationAccess().getGroup()); }
(rule__SamplingAnnotation__Group__0)
{ after(grammarAccess.getSamplingAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePriorityAnnotation
entryRulePriorityAnnotation 
:
{ before(grammarAccess.getPriorityAnnotationRule()); }
	 rulePriorityAnnotation
{ after(grammarAccess.getPriorityAnnotationRule()); } 
	 EOF 
;

// Rule PriorityAnnotation
rulePriorityAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPriorityAnnotationAccess().getGroup()); }
(rule__PriorityAnnotation__Group__0)
{ after(grammarAccess.getPriorityAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterFilterRule
entryRuleParameterFilterRule 
:
{ before(grammarAccess.getParameterFilterRuleRule()); }
	 ruleParameterFilterRule
{ after(grammarAccess.getParameterFilterRuleRule()); } 
	 EOF 
;

// Rule ParameterFilterRule
ruleParameterFilterRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterFilterRuleAccess().getAlternatives()); }
(rule__ParameterFilterRule__Alternatives)
{ after(grammarAccess.getParameterFilterRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeFilter
entryRuleRangeFilter 
:
{ before(grammarAccess.getRangeFilterRule()); }
	 ruleRangeFilter
{ after(grammarAccess.getRangeFilterRule()); } 
	 EOF 
;

// Rule RangeFilter
ruleRangeFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeFilterAccess().getGroup()); }
(rule__RangeFilter__Group__0)
{ after(grammarAccess.getRangeFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeAccess().getAlternatives()); }
(rule__Range__Alternatives)
{ after(grammarAccess.getRangeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpenOpen
entryRuleOpenOpen 
:
{ before(grammarAccess.getOpenOpenRule()); }
	 ruleOpenOpen
{ after(grammarAccess.getOpenOpenRule()); } 
	 EOF 
;

// Rule OpenOpen
ruleOpenOpen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpenOpenAccess().getGroup()); }
(rule__OpenOpen__Group__0)
{ after(grammarAccess.getOpenOpenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpenClosed
entryRuleOpenClosed 
:
{ before(grammarAccess.getOpenClosedRule()); }
	 ruleOpenClosed
{ after(grammarAccess.getOpenClosedRule()); } 
	 EOF 
;

// Rule OpenClosed
ruleOpenClosed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpenClosedAccess().getGroup()); }
(rule__OpenClosed__Group__0)
{ after(grammarAccess.getOpenClosedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosedClosed
entryRuleClosedClosed 
:
{ before(grammarAccess.getClosedClosedRule()); }
	 ruleClosedClosed
{ after(grammarAccess.getClosedClosedRule()); } 
	 EOF 
;

// Rule ClosedClosed
ruleClosedClosed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosedClosedAccess().getGroup()); }
(rule__ClosedClosed__Group__0)
{ after(grammarAccess.getClosedClosedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosedOpen
entryRuleClosedOpen 
:
{ before(grammarAccess.getClosedOpenRule()); }
	 ruleClosedOpen
{ after(grammarAccess.getClosedOpenRule()); } 
	 EOF 
;

// Rule ClosedOpen
ruleClosedOpen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosedOpenAccess().getGroup()); }
(rule__ClosedOpen__Group__0)
{ after(grammarAccess.getClosedOpenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericFilter
entryRuleNumericFilter 
:
{ before(grammarAccess.getNumericFilterRule()); }
	 ruleNumericFilter
{ after(grammarAccess.getNumericFilterRule()); } 
	 EOF 
;

// Rule NumericFilter
ruleNumericFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericFilterAccess().getGroup()); }
(rule__NumericFilter__Group__0)
{ after(grammarAccess.getNumericFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericOperator
entryRuleNumericOperator 
:
{ before(grammarAccess.getNumericOperatorRule()); }
	 ruleNumericOperator
{ after(grammarAccess.getNumericOperatorRule()); } 
	 EOF 
;

// Rule NumericOperator
ruleNumericOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericOperatorAccess().getAlternatives()); }
(rule__NumericOperator__Alternatives)
{ after(grammarAccess.getNumericOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralFilter
entryRuleLiteralFilter 
:
{ before(grammarAccess.getLiteralFilterRule()); }
	 ruleLiteralFilter
{ after(grammarAccess.getLiteralFilterRule()); } 
	 EOF 
;

// Rule LiteralFilter
ruleLiteralFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralFilterAccess().getGroup()); }
(rule__LiteralFilter__Group__0)
{ after(grammarAccess.getLiteralFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralOperator
entryRuleLiteralOperator 
:
{ before(grammarAccess.getLiteralOperatorRule()); }
	 ruleLiteralOperator
{ after(grammarAccess.getLiteralOperatorRule()); } 
	 EOF 
;

// Rule LiteralOperator
ruleLiteralOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralOperatorAccess().getAlternatives()); }
(rule__LiteralOperator__Alternatives)
{ after(grammarAccess.getLiteralOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegationOpartor
entryRuleNegationOpartor 
:
{ before(grammarAccess.getNegationOpartorRule()); }
	 ruleNegationOpartor
{ after(grammarAccess.getNegationOpartorRule()); } 
	 EOF 
;

// Rule NegationOpartor
ruleNegationOpartor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegationOpartorAccess().getNotKeyword()); }

	'not' 

{ after(grammarAccess.getNegationOpartorAccess().getNotKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule IQPatternChangeType
ruleIQPatternChangeType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternChangeTypeAccess().getAlternatives()); }
(rule__IQPatternChangeType__Alternatives)
{ after(grammarAccess.getIQPatternChangeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Context
ruleContext
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getAlternatives()); }
(rule__Context__Alternatives)
{ after(grammarAccess.getContextAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Usage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsageAccess().getIQUsageParserRuleCall_0()); }
	ruleIQUsage
{ after(grammarAccess.getUsageAccess().getIQUsageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUsageAccess().getEventSourceUsageParserRuleCall_1()); }
	ruleEventSourceUsage
{ after(grammarAccess.getUsageAccess().getEventSourceUsageParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getAbstractAtomicEventParserRuleCall_0()); }
	ruleAbstractAtomicEvent
{ after(grammarAccess.getEventAccess().getAbstractAtomicEventParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEventAccess().getComplexEventParserRuleCall_1()); }
	ruleComplexEvent
{ after(grammarAccess.getEventAccess().getComplexEventParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAtomicEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractAtomicEventAccess().getAtomicEventParserRuleCall_0()); }
	ruleAtomicEvent
{ after(grammarAccess.getAbstractAtomicEventAccess().getAtomicEventParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractAtomicEventAccess().getIQPatternEventParserRuleCall_1()); }
	ruleIQPatternEvent
{ after(grammarAccess.getAbstractAtomicEventAccess().getIQPatternEventParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getContextAnnotationParserRuleCall_0()); }
	ruleContextAnnotation
{ after(grammarAccess.getAnnotationsAccess().getContextAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationsAccess().getSamplingAnnotationParserRuleCall_1()); }
	ruleSamplingAnnotation
{ after(grammarAccess.getAnnotationsAccess().getSamplingAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationsAccess().getPriorityAnnotationParserRuleCall_2()); }
	rulePriorityAnnotation
{ after(grammarAccess.getAnnotationsAccess().getPriorityAnnotationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterFilterRule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterFilterRuleAccess().getRangeFilterParserRuleCall_0()); }
	ruleRangeFilter
{ after(grammarAccess.getParameterFilterRuleAccess().getRangeFilterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterFilterRuleAccess().getNumericFilterParserRuleCall_1()); }
	ruleNumericFilter
{ after(grammarAccess.getParameterFilterRuleAccess().getNumericFilterParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParameterFilterRuleAccess().getLiteralFilterParserRuleCall_2()); }
	ruleLiteralFilter
{ after(grammarAccess.getParameterFilterRuleAccess().getLiteralFilterParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getOpenOpenParserRuleCall_0()); }
	ruleOpenOpen
{ after(grammarAccess.getRangeAccess().getOpenOpenParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getOpenClosedParserRuleCall_1()); }
	ruleOpenClosed
{ after(grammarAccess.getRangeAccess().getOpenClosedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getClosedClosedParserRuleCall_2()); }
	ruleClosedClosed
{ after(grammarAccess.getRangeAccess().getClosedClosedParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getClosedOpenParserRuleCall_3()); }
	ruleClosedOpen
{ after(grammarAccess.getRangeAccess().getClosedOpenParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericOperatorAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getNumericOperatorAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getNumericOperatorAccess().getEqualsSignLessThanSignKeyword_1()); }

	'=<' 

{ after(grammarAccess.getNumericOperatorAccess().getEqualsSignLessThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getNumericOperatorAccess().getEqualsSignEqualsSignKeyword_2()); }

	'==' 

{ after(grammarAccess.getNumericOperatorAccess().getEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getNumericOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }

	'!=' 

{ after(grammarAccess.getNumericOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getNumericOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }

	'>=' 

{ after(grammarAccess.getNumericOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getNumericOperatorAccess().getGreaterThanSignKeyword_5()); }

	'>' 

{ after(grammarAccess.getNumericOperatorAccess().getGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralOperatorAccess().getContainsKeyword_0()); }

	'contains' 

{ after(grammarAccess.getLiteralOperatorAccess().getContainsKeyword_0()); }
)

    |(
{ before(grammarAccess.getLiteralOperatorAccess().getStartsWithKeyword_1()); }

	'startsWith' 

{ after(grammarAccess.getLiteralOperatorAccess().getStartsWithKeyword_1()); }
)

    |(
{ before(grammarAccess.getLiteralOperatorAccess().getEndsWithKeyword_2()); }

	'endsWith' 

{ after(grammarAccess.getLiteralOperatorAccess().getEndsWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternChangeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternChangeTypeAccess().getFOUNDEnumLiteralDeclaration_0()); }
(	'FOUND' 
)
{ after(grammarAccess.getIQPatternChangeTypeAccess().getFOUNDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getIQPatternChangeTypeAccess().getLOSTEnumLiteralDeclaration_1()); }
(	'LOST' 
)
{ after(grammarAccess.getIQPatternChangeTypeAccess().getLOSTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getChronicleEnumLiteralDeclaration_0()); }
(	'Chronicle' 
)
{ after(grammarAccess.getContextAccess().getChronicleEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getContextAccess().getRecentEnumLiteralDeclaration_1()); }
(	'Recent' 
)
{ after(grammarAccess.getContextAccess().getRecentEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getContextAccess().getUnrestrictedEnumLiteralDeclaration_2()); }
(	'Unrestricted' 
)
{ after(grammarAccess.getContextAccess().getUnrestrictedEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getUsagesAssignment_2()); }
(rule__PackageDeclaration__UsagesAssignment_2)*
{ after(grammarAccess.getPackageDeclarationAccess().getUsagesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getModelAssignment_3()); }
(rule__PackageDeclaration__ModelAssignment_3)
{ after(grammarAccess.getPackageDeclarationAccess().getModelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup_1()); }
(rule__DOUBLE__Group_1__0)?
{ after(grammarAccess.getDOUBLEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__0__Impl
	rule__DOUBLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IQUsage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQUsage__Group__0__Impl
	rule__IQUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IQUsage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQUsageAccess().getUsesIncqueryPatternsKeyword_0()); }

	'uses-incquery-patterns' 

{ after(grammarAccess.getIQUsageAccess().getUsesIncqueryPatternsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQUsage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQUsage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IQUsage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQUsageAccess().getImportedNamespaceAssignment_1()); }
(rule__IQUsage__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getIQUsageAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventSourceUsage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventSourceUsage__Group__0__Impl
	rule__EventSourceUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSourceUsage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventSourceUsageAccess().getUsesEventsourcesKeyword_0()); }

	'uses-eventsources' 

{ after(grammarAccess.getEventSourceUsageAccess().getUsesEventsourcesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventSourceUsage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventSourceUsage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSourceUsage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventSourceUsageAccess().getImportedNamespaceAssignment_1()); }
(rule__EventSourceUsage__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getEventSourceUsageAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAnnotationsAssignment_0()); }
(rule__Model__AnnotationsAssignment_0)*
{ after(grammarAccess.getModelAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEventModelKeyword_1()); }

	'EventModel' 

{ after(grammarAccess.getModelAccess().getEventModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_2()); }
(rule__Model__NameAssignment_2)
{ after(grammarAccess.getModelAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEventsAssignment_4()); }
(rule__Model__EventsAssignment_4)*
{ after(grammarAccess.getModelAccess().getEventsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AtomicEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__0__Impl
	rule__AtomicEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getAnnotationsAssignment_0()); }
(rule__AtomicEvent__AnnotationsAssignment_0)*
{ after(grammarAccess.getAtomicEventAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__1__Impl
	rule__AtomicEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getAtomicEventKeyword_1()); }

	'AtomicEvent' 

{ after(grammarAccess.getAtomicEventAccess().getAtomicEventKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__2__Impl
	rule__AtomicEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getNameAssignment_2()); }
(rule__AtomicEvent__NameAssignment_2)
{ after(grammarAccess.getAtomicEventAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__3__Impl
	rule__AtomicEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getLeftParenthesisRightParenthesisKeyword_3()); }

	'()' 

{ after(grammarAccess.getAtomicEventAccess().getLeftParenthesisRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__4__Impl
	rule__AtomicEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getAtomicEventAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__5__Impl
	rule__AtomicEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getSourceKeyword_5()); }

	'source' 

{ after(grammarAccess.getAtomicEventAccess().getSourceKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__6__Impl
	rule__AtomicEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getAtomicEventAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__7__Impl
	rule__AtomicEvent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getSourceAssignment_7()); }
(rule__AtomicEvent__SourceAssignment_7)
{ after(grammarAccess.getAtomicEventAccess().getSourceAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__8__Impl
	rule__AtomicEvent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getIdKeyword_8()); }

	'id' 

{ after(grammarAccess.getAtomicEventAccess().getIdKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__9__Impl
	rule__AtomicEvent__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getColonKeyword_9()); }

	':' 

{ after(grammarAccess.getAtomicEventAccess().getColonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__10__Impl
	rule__AtomicEvent__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getIdAssignment_10()); }
(rule__AtomicEvent__IdAssignment_10)
{ after(grammarAccess.getAtomicEventAccess().getIdAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__11__Impl
	rule__AtomicEvent__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getParameterFiltersKeyword_11()); }

	'parameterFilters' 

{ after(grammarAccess.getAtomicEventAccess().getParameterFiltersKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__12__Impl
	rule__AtomicEvent__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getLeftCurlyBracketKeyword_12()); }

	'{' 

{ after(grammarAccess.getAtomicEventAccess().getLeftCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__13__Impl
	rule__AtomicEvent__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAtomicEventAccess().getParameterFiltersAssignment_13()); }
(rule__AtomicEvent__ParameterFiltersAssignment_13)
{ after(grammarAccess.getAtomicEventAccess().getParameterFiltersAssignment_13()); }
)
(
{ before(grammarAccess.getAtomicEventAccess().getParameterFiltersAssignment_13()); }
(rule__AtomicEvent__ParameterFiltersAssignment_13)*
{ after(grammarAccess.getAtomicEventAccess().getParameterFiltersAssignment_13()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__14__Impl
	rule__AtomicEvent__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getRightCurlyBracketKeyword_14()); }

	'}' 

{ after(grammarAccess.getAtomicEventAccess().getRightCurlyBracketKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicEvent__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicEvent__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getRightCurlyBracketKeyword_15()); }

	'}' 

{ after(grammarAccess.getAtomicEventAccess().getRightCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__IQPatternEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__0__Impl
	rule__IQPatternEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getIQPatternEventKeyword_0()); }

	'IQPatternEvent' 

{ after(grammarAccess.getIQPatternEventAccess().getIQPatternEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__1__Impl
	rule__IQPatternEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getNameAssignment_1()); }
(rule__IQPatternEvent__NameAssignment_1)
{ after(grammarAccess.getIQPatternEventAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__2__Impl
	rule__IQPatternEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getLeftParenthesisRightParenthesisKeyword_2()); }

	'()' 

{ after(grammarAccess.getIQPatternEventAccess().getLeftParenthesisRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__3__Impl
	rule__IQPatternEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getIQPatternEventAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__4__Impl
	rule__IQPatternEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getIQPatternRefKeyword_4()); }

	'IQPatternRef' 

{ after(grammarAccess.getIQPatternEventAccess().getIQPatternRefKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__5__Impl
	rule__IQPatternEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getIQPatternEventAccess().getColonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__6__Impl
	rule__IQPatternEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getIqpatternAssignment_6()); }
(rule__IQPatternEvent__IqpatternAssignment_6)
{ after(grammarAccess.getIQPatternEventAccess().getIqpatternAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__7__Impl
	rule__IQPatternEvent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getChangeTypeKeyword_7()); }

	'ChangeType' 

{ after(grammarAccess.getIQPatternEventAccess().getChangeTypeKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__8__Impl
	rule__IQPatternEvent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getColonKeyword_8()); }

	':' 

{ after(grammarAccess.getIQPatternEventAccess().getColonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__9__Impl
	rule__IQPatternEvent__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getChangeTypeAssignment_9()); }
(rule__IQPatternEvent__ChangeTypeAssignment_9)
{ after(grammarAccess.getIQPatternEventAccess().getChangeTypeAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IQPatternEvent__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IQPatternEvent__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getIQPatternEventAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ComplexEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexEvent__Group__0__Impl
	rule__ComplexEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getAnnotationsAssignment_0()); }
(rule__ComplexEvent__AnnotationsAssignment_0)*
{ after(grammarAccess.getComplexEventAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexEvent__Group__1__Impl
	rule__ComplexEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getComplexEventKeyword_1()); }

	'ComplexEvent' 

{ after(grammarAccess.getComplexEventAccess().getComplexEventKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexEvent__Group__2__Impl
	rule__ComplexEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getNameAssignment_2()); }
(rule__ComplexEvent__NameAssignment_2)
{ after(grammarAccess.getComplexEventAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexEvent__Group__3__Impl
	rule__ComplexEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getParamlistAssignment_3()); }
(rule__ComplexEvent__ParamlistAssignment_3)
{ after(grammarAccess.getComplexEventAccess().getParamlistAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexEvent__Group__4__Impl
	rule__ComplexEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getComplexEventAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexEvent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexEvent__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getComplexEventAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CEParamlist__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CEParamlist__Group__0__Impl
	rule__CEParamlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CEParamlist__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCEParamlistAccess().getCEParamlistAction_0()); }
(

)
{ after(grammarAccess.getCEParamlistAccess().getCEParamlistAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CEParamlist__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CEParamlist__Group__1__Impl
	rule__CEParamlist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CEParamlist__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCEParamlistAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCEParamlistAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CEParamlist__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CEParamlist__Group__2__Impl
	rule__CEParamlist__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CEParamlist__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCEParamlistAccess().getParamsAssignment_2()); }
(rule__CEParamlist__ParamsAssignment_2)*
{ after(grammarAccess.getCEParamlistAccess().getParamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CEParamlist__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CEParamlist__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CEParamlist__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCEParamlistAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCEParamlistAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParamWithType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamWithType__Group__0__Impl
	rule__ParamWithType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamWithType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamWithTypeAccess().getNameAssignment_0()); }
(rule__ParamWithType__NameAssignment_0)
{ after(grammarAccess.getParamWithTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamWithType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamWithType__Group__1__Impl
	rule__ParamWithType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamWithType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamWithTypeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getParamWithTypeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamWithType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamWithType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamWithType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamWithTypeAccess().getTypeAssignment_2()); }
(rule__ParamWithType__TypeAssignment_2)
{ after(grammarAccess.getParamWithTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterFilter__Group__0__Impl
	rule__ParameterFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterFilterAccess().getAttributeNameAssignment_0()); }
(rule__ParameterFilter__AttributeNameAssignment_0)
{ after(grammarAccess.getParameterFilterAccess().getAttributeNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterFilterAccess().getParamFilterRuleAssignment_1()); }
(rule__ParameterFilter__ParamFilterRuleAssignment_1)
{ after(grammarAccess.getParameterFilterAccess().getParamFilterRuleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContextAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextAnnotation__Group__0__Impl
	rule__ContextAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAnnotationAccess().getContextKeyword_0()); }

	'@Context' 

{ after(grammarAccess.getContextAnnotationAccess().getContextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextAnnotation__Group__1__Impl
	rule__ContextAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAnnotationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getContextAnnotationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextAnnotation__Group__2__Impl
	rule__ContextAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAnnotationAccess().getContextAssignment_2()); }
(rule__ContextAnnotation__ContextAssignment_2)
{ after(grammarAccess.getContextAnnotationAccess().getContextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAnnotationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getContextAnnotationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SamplingAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SamplingAnnotation__Group__0__Impl
	rule__SamplingAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SamplingAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingAnnotationAccess().getSamplingTimeKeyword_0()); }

	'@SamplingTime' 

{ after(grammarAccess.getSamplingAnnotationAccess().getSamplingTimeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SamplingAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SamplingAnnotation__Group__1__Impl
	rule__SamplingAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SamplingAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingAnnotationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSamplingAnnotationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SamplingAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SamplingAnnotation__Group__2__Impl
	rule__SamplingAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SamplingAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingAnnotationAccess().getSamplingAssignment_2()); }
(rule__SamplingAnnotation__SamplingAssignment_2)
{ after(grammarAccess.getSamplingAnnotationAccess().getSamplingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SamplingAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SamplingAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SamplingAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingAnnotationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSamplingAnnotationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PriorityAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PriorityAnnotation__Group__0__Impl
	rule__PriorityAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPriorityAnnotationAccess().getPriorityKeyword_0()); }

	'@Priority' 

{ after(grammarAccess.getPriorityAnnotationAccess().getPriorityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PriorityAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PriorityAnnotation__Group__1__Impl
	rule__PriorityAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPriorityAnnotationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getPriorityAnnotationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PriorityAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PriorityAnnotation__Group__2__Impl
	rule__PriorityAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPriorityAnnotationAccess().getPriorityAssignment_2()); }
(rule__PriorityAnnotation__PriorityAssignment_2)
{ after(grammarAccess.getPriorityAnnotationAccess().getPriorityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PriorityAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PriorityAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPriorityAnnotationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getPriorityAnnotationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RangeFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFilter__Group__0__Impl
	rule__RangeFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFilterAccess().getNegAssignment_0()); }
(rule__RangeFilter__NegAssignment_0)?
{ after(grammarAccess.getRangeFilterAccess().getNegAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFilter__Group__1__Impl
	rule__RangeFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFilterAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getRangeFilterAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFilter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFilter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFilterAccess().getRangeAssignment_2()); }
(rule__RangeFilter__RangeAssignment_2)
{ after(grammarAccess.getRangeFilterAccess().getRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpenOpen__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenOpen__Group__0__Impl
	rule__OpenOpen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getOpenOpenAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenOpen__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenOpen__Group__1__Impl
	rule__OpenOpen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getLowerBoundAssignment_1()); }
(rule__OpenOpen__LowerBoundAssignment_1)
{ after(grammarAccess.getOpenOpenAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenOpen__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenOpen__Group__2__Impl
	rule__OpenOpen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getOpenOpenAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenOpen__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenOpen__Group__3__Impl
	rule__OpenOpen__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getUpperBoundAssignment_3()); }
(rule__OpenOpen__UpperBoundAssignment_3)
{ after(grammarAccess.getOpenOpenAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenOpen__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenOpen__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOpenOpenAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OpenClosed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenClosed__Group__0__Impl
	rule__OpenClosed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getOpenClosedAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClosed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenClosed__Group__1__Impl
	rule__OpenClosed__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getLowerBoundAssignment_1()); }
(rule__OpenClosed__LowerBoundAssignment_1)
{ after(grammarAccess.getOpenClosedAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClosed__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenClosed__Group__2__Impl
	rule__OpenClosed__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getOpenClosedAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClosed__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenClosed__Group__3__Impl
	rule__OpenClosed__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getUpperBoundAssignment_3()); }
(rule__OpenClosed__UpperBoundAssignment_3)
{ after(grammarAccess.getOpenClosedAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClosed__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenClosed__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getOpenClosedAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClosedClosed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedClosed__Group__0__Impl
	rule__ClosedClosed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getClosedClosedAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedClosed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedClosed__Group__1__Impl
	rule__ClosedClosed__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getLowerBoundAssignment_1()); }
(rule__ClosedClosed__LowerBoundAssignment_1)
{ after(grammarAccess.getClosedClosedAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedClosed__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedClosed__Group__2__Impl
	rule__ClosedClosed__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getClosedClosedAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedClosed__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedClosed__Group__3__Impl
	rule__ClosedClosed__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getUpperBoundAssignment_3()); }
(rule__ClosedClosed__UpperBoundAssignment_3)
{ after(grammarAccess.getClosedClosedAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedClosed__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedClosed__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getClosedClosedAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClosedOpen__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedOpen__Group__0__Impl
	rule__ClosedOpen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getClosedOpenAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedOpen__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedOpen__Group__1__Impl
	rule__ClosedOpen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getLowerBoundAssignment_1()); }
(rule__ClosedOpen__LowerBoundAssignment_1)
{ after(grammarAccess.getClosedOpenAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedOpen__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedOpen__Group__2__Impl
	rule__ClosedOpen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getClosedOpenAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedOpen__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedOpen__Group__3__Impl
	rule__ClosedOpen__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getUpperBoundAssignment_3()); }
(rule__ClosedOpen__UpperBoundAssignment_3)
{ after(grammarAccess.getClosedOpenAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedOpen__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedOpen__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getClosedOpenAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NumericFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericFilter__Group__0__Impl
	rule__NumericFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericFilterAccess().getOperatorAssignment_0()); }
(rule__NumericFilter__OperatorAssignment_0)
{ after(grammarAccess.getNumericFilterAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericFilterAccess().getValueAssignment_1()); }
(rule__NumericFilter__ValueAssignment_1)
{ after(grammarAccess.getNumericFilterAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralFilter__Group__0__Impl
	rule__LiteralFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFilterAccess().getNegAssignment_0()); }
(rule__LiteralFilter__NegAssignment_0)?
{ after(grammarAccess.getLiteralFilterAccess().getNegAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralFilter__Group__1__Impl
	rule__LiteralFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFilterAccess().getOperatorAssignment_1()); }
(rule__LiteralFilter__OperatorAssignment_1)
{ after(grammarAccess.getLiteralFilterAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralFilter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralFilter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFilter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFilterAccess().getValueAssignment_2()); }
(rule__LiteralFilter__ValueAssignment_2)
{ after(grammarAccess.getLiteralFilterAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__UsagesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getUsagesUsageParserRuleCall_2_0()); }
	ruleUsage{ after(grammarAccess.getPackageDeclarationAccess().getUsagesUsageParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ModelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getModelModelParserRuleCall_3_0()); }
	ruleModel{ after(grammarAccess.getPackageDeclarationAccess().getModelModelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IQUsage__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQUsageAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getIQUsageAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventSourceUsage__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventSourceUsageAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getEventSourceUsageAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAnnotationsAnnotationsParserRuleCall_0_0()); }
	ruleAnnotations{ after(grammarAccess.getModelAccess().getAnnotationsAnnotationsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EventsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEventsEventParserRuleCall_4_0()); }
	ruleEvent{ after(grammarAccess.getModelAccess().getEventsEventParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getAnnotationsAnnotationsParserRuleCall_0_0()); }
	ruleAnnotations{ after(grammarAccess.getAtomicEventAccess().getAnnotationsAnnotationsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAtomicEventAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__SourceAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getSourceSourceCrossReference_7_0()); }
(
{ before(grammarAccess.getAtomicEventAccess().getSourceSourceIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getAtomicEventAccess().getSourceSourceIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getAtomicEventAccess().getSourceSourceCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__IdAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getIdSTRINGTerminalRuleCall_10_0()); }
	RULE_STRING{ after(grammarAccess.getAtomicEventAccess().getIdSTRINGTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicEvent__ParameterFiltersAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicEventAccess().getParameterFiltersParameterFilterParserRuleCall_13_0()); }
	ruleParameterFilter{ after(grammarAccess.getAtomicEventAccess().getParameterFiltersParameterFilterParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIQPatternEventAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__IqpatternAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getIqpatternIQPatternParserRuleCall_6_0()); }
	ruleIQPattern{ after(grammarAccess.getIQPatternEventAccess().getIqpatternIQPatternParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IQPatternEvent__ChangeTypeAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternEventAccess().getChangeTypeIQPatternChangeTypeEnumRuleCall_9_0()); }
	ruleIQPatternChangeType{ after(grammarAccess.getIQPatternEventAccess().getChangeTypeIQPatternChangeTypeEnumRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getAnnotationsAnnotationsParserRuleCall_0_0()); }
	ruleAnnotations{ after(grammarAccess.getComplexEventAccess().getAnnotationsAnnotationsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComplexEventAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexEvent__ParamlistAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexEventAccess().getParamlistCEParamlistParserRuleCall_3_0()); }
	ruleCEParamlist{ after(grammarAccess.getComplexEventAccess().getParamlistCEParamlistParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CEParamlist__ParamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCEParamlistAccess().getParamsParamWithTypeParserRuleCall_2_0()); }
	ruleParamWithType{ after(grammarAccess.getCEParamlistAccess().getParamsParamWithTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamWithType__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamWithTypeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParamWithTypeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamWithType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamWithTypeAccess().getTypeAbstractAtomicEventCrossReference_2_0()); }
(
{ before(grammarAccess.getParamWithTypeAccess().getTypeAbstractAtomicEventIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getParamWithTypeAccess().getTypeAbstractAtomicEventIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getParamWithTypeAccess().getTypeAbstractAtomicEventCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterFilter__AttributeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterFilterAccess().getAttributeNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameterFilterAccess().getAttributeNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterFilter__ParamFilterRuleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterFilterAccess().getParamFilterRuleParameterFilterRuleParserRuleCall_1_0()); }
	ruleParameterFilterRule{ after(grammarAccess.getParameterFilterAccess().getParamFilterRuleParameterFilterRuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IQPattern__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIQPatternAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getIQPatternAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextAnnotation__ContextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAnnotationAccess().getContextContextEnumRuleCall_2_0()); }
	ruleContext{ after(grammarAccess.getContextAnnotationAccess().getContextContextEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SamplingAnnotation__SamplingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingAnnotationAccess().getSamplingINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getSamplingAnnotationAccess().getSamplingINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityAnnotation__PriorityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPriorityAnnotationAccess().getPriorityINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getPriorityAnnotationAccess().getPriorityINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__NegAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFilterAccess().getNegNegationOpartorParserRuleCall_0_0()); }
	ruleNegationOpartor{ after(grammarAccess.getRangeFilterAccess().getNegNegationOpartorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFilter__RangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFilterAccess().getRangeRangeParserRuleCall_2_0()); }
	ruleRange{ after(grammarAccess.getRangeFilterAccess().getRangeRangeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getOpenOpenAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenOpen__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenOpenAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getOpenOpenAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getOpenClosedAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClosed__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenClosedAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getOpenClosedAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getClosedClosedAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedClosed__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedClosedAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getClosedClosedAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getClosedOpenAccess().getLowerBoundDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedOpen__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedOpenAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getClosedOpenAccess().getUpperBoundDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFilter__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericFilterAccess().getOperatorNumericOperatorParserRuleCall_0_0()); }
	ruleNumericOperator{ after(grammarAccess.getNumericFilterAccess().getOperatorNumericOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFilter__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericFilterAccess().getValueDOUBLEParserRuleCall_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getNumericFilterAccess().getValueDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFilter__NegAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFilterAccess().getNegNegationOpartorParserRuleCall_0_0()); }
	ruleNegationOpartor{ after(grammarAccess.getLiteralFilterAccess().getNegNegationOpartorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFilter__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFilterAccess().getOperatorLiteralOperatorParserRuleCall_1_0()); }
	ruleLiteralOperator{ after(grammarAccess.getLiteralFilterAccess().getOperatorLiteralOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralFilter__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralFilterAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralFilterAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


